!function(e){var t={};function i(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,a){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(i.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(a,n,function(t){return e[t]}.bind(null,n));return a},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}PIXI.filters.MyFilter=function(e){function t(){return s(this,t),o(this,r(t).call(this,null,"\nprecision mediump float;\n\nvarying vec2 vTextureCoord;\nuniform float time;\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D disp;\nuniform vec2 ratio;\nuniform float dispFactor;\nuniform float intensity;\n\nvoid main(void) {\n\n    //ウィンドウにアス比を守りつつフィット\n    vec2 uv = vec2(\n    vTextureCoord.x * ratio.x + (1.0 - ratio.x) * 0.5,\n    vTextureCoord.y * ratio.y + (1.0 - ratio.y) * 0.5\n    );\n\n    vec4 disp = texture2D(disp, uv);\n\n    vec2 distortedPosition = vec2(uv.x + dispFactor * (disp.r * intensity), uv.y + dispFactor * (disp.r * intensity));\n    vec2 distortedPosition2 = vec2(uv.x - (1.0 - dispFactor) * (disp.r * intensity), uv.y - (1.0 - dispFactor) * (disp.r * intensity));\n\n    vec4 _texture1 = texture2D(texture1, distortedPosition);\n    vec4 _texture2 = texture2D(texture2, distortedPosition2);\n\n    vec4 finalTexture = mix(_texture1, _texture2, dispFactor);\n\n    gl_FragColor = finalTexture;\n}",{texture1:null,texture2:null,disp:null,dispFactor:0,ratio:null,intensity:0}))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(t,PIXI.Filter),t}();var l=function(){function e(){s(this,e),this.app={},this.myFilter=new PIXI.filters.MyFilter,this.graphics=new PIXI.Graphics,this.slideTL={},this.blocKIndex=Math.floor(Math.random()*window.slideData.length),this.slideData=window.slideData,this.inLoading=!1,this.nrw=window.innerWidth<=768,this.resizeTimer=null,this.isMobile=navigator.userAgent.match(/iPhone|iPad|Android/),this.init()}var t,i,a;return t=e,(i=[{key:"init",value:function(){PIXI.utils.isWebGLSupported()?this.initPixi():this.onInitError()}},{key:"onInitError",value:function(){$(".l-supportenv").addClass("-active"),$(".loader").removeClass("-active"),$(".main__ttl,.l-footer").addClass("-active")}},{key:"initPixi",value:function(){var e=this;this.app=new PIXI.Application({view:document.querySelector("#js-canvas")}),this.app.stage.addChild(this.graphics),this.setFullscreenCanvas(),this.isMobile?window.addEventListener("orientationchange",(function(){e.setFullscreenCanvas()})):window.addEventListener("resize",(function(){e.setFullscreenCanvas()})),this.loadAssets()}},{key:"loadAssets",value:function(){for(var e=this,t=this.nrw?"_nrw.jpg":".jpg",i=PIXI.Loader.shared,a=this.slideData[this.blocKIndex],n=0;n<a.img.length;n++){var s=a.blockID+(n+1);i.add(s,a.img[n]+t),i.add(s+"_voice",a.voice[n])}i.add("disp","https://lance70176.github.io/5th-fate-go/assets/img/filter/disp.jpg"),i.add("intro_voice","https://lance70176.github.io/5th-fate-go/reward/voice/intro_c63gvex9.mp3"),i.on("progress",(function(t){e.onProgress(t)})),i.load((function(t,i){e.onComplete(t,i)}))}},{key:"loadNextBlockAssets",value:function(e){var t=this;this.inLoading=!0;for(var i=this.nrw?"_nrw.jpg":".jpg",a=PIXI.Loader.shared,n=this.slideData[e],s=0;s<n.img.length;s++){var o=n.blockID+(s+1);a.resources[o]||(a.add(o,n.img[s]+i),a.add(o+"_voice",n.voice[s]))}a.on("progress",(function(e){t.onProgress(e)})),a.load((function(e,i){t.inLoading=!1}))}},{key:"onProgress",value:function(e){var t=e.progress/100;$(".l-canvas_progress").css("transform","scaleX("+t+")")}},{key:"onComplete",value:function(e,t){setTimeout((function(){$(".l-canvas_progress").addClass("-complete")}),500);var i=this.myFilter,a=this.app,n=this.myFilter.uniforms,s=this.slideTL,o=0,r=this.slideData[this.blocKIndex],c=r.img.length,l=1,d=this.nrw?1:1.5,u=this;function v(){$(".main__preftxt__item").removeClass("-active");for(var e=r.caption,t=o==c?0:o,i=0;i<3;i++)$(".main__preftxt__item__txt").eq(i).html(e[t][i]),""==e[t][i]?$(".main__preftxt__item").eq(i).addClass("-disable"):$(".main__preftxt__item").eq(i).removeClass("-disable");$(".main__preftxt").attr("data-id",e[t][3])}function _(){(s=new TimelineMax({onComplete:h})).to(".l-canvas_overlay",.1,{opacity:0},0),s.to(n,d,{dispFactor:l,ease:Circ.easeInOut,onComplete:function(){o++,n.texture1=t[r.blockID+"2"].texture,l=0}},0)}function h(){if(u.inLoading&&0===o)return console.log("loading now..."),setTimeout(h,2e3);if(1===o){var e=u.blocKIndex+1;e>u.slideData.length-1&&(e=0),u.loadNextBlockAssets(e)}if((s=new TimelineMax({onComplete:h})).to(".l-canvas_overlay",6,{opacity:1,ease:Power1.easeIn},0),s.to(".l-canvas_overlay",2,{opacity:0},6),s.to(".main__preftxt__item__txt",.5,{opacity:0},6),s.to(".main__preftxt__item__txt",.1,{opacity:1},8),0===o){var i=0===u.blocKIndex?u.slideData.length-1:u.blocKIndex-1,a=u.slideData[i];t[a.blockID+a.img.length+"_voice"].sound.play()}else t[r.blockID+o+"_voice"].sound.play();s.call((function(){v()}),null,6.5),s.call((function(){$(".main__preftxt__item").addClass("-active")}),null,7.5),s.to(n,d,{dispFactor:l,ease:Circ.easeInOut,onComplete:function(){++o>=c&&(u.blocKIndex===u.slideData.length-1?u.blocKIndex=0:u.blocKIndex++,r=u.slideData[u.blocKIndex],c=r.img.length,o=0);var e=o+1;1==l?(l=0,n.texture1=t[r.blockID+e].texture):(l=1,n.texture2=t[r.blockID+e].texture)}},6)}n.texture1=null,n.texture2=t[r.blockID+"1"].texture,n.disp=t.disp.texture,n.intensity=this.nrw?.3:.2,n.ratio=this.calcRatio(),a.stage.filters=[i],$(".sound_select").addClass("-active"),$(".js-sound_select").on("click",(function(){var e=!1;$(".sound_select").removeClass("-active"),"1"===$(this).attr("data-mute")&&($(".js-mutevoice").addClass("-mute"),window.userSoundOff=!0,window.isMute=!0,PIXI.sound.muteAll(),e=!0),function(e){var i=new TimelineMax({});if($(".sound_select").addClass("-hide").remove(),$(".js-loader__skip").on("click",(function(){PIXI.sound.stopAll(),i.clear(),v(),_(),$(".loader").removeClass("-active"),$(".js-screenobj").addClass("-active"),$("body,html").removeClass("-inmodal"),setTimeout((function(){$(".js-bnr").addClass("-active")}),2e3)})),Cookies.get("visited"))$(".sound_select").addClass("-hide"),$(".loader").removeClass("-active").addClass("-hide"),$(".js-screenobj").addClass("-active"),setTimeout((function(){$(".js-bnr").addClass("-active")}),2e3),v(),_();else{$(".sound_select").addClass("-hide"),$("body,html").addClass("-inmodal"),$(".loader__skip").addClass("-active"),t.intro_voice.sound.play();var a=u.nrw?5:10,n=e?9:35;i.fromTo(".loader__map,.loader__ttl",a,{opacity:0,scale:.8},{opacity:.4,scale:1},0),i.fromTo(".loader__logo",a,{opacity:0,scale:.8},{opacity:1,scale:1},0),e?$(".loader__state__txt__txt,.loader__state__inner").addClass("-anim -soundoff"):$(".loader__state__txt__txt,.loader__state__inner").addClass("-anim"),i.call((function(){v(),_(),$(".loader").removeClass("-active").addClass("-hide"),$(".js-screenobj").addClass("-active"),$("body,html").removeClass("-inmodal")}),null,n),i.call((function(){$(".js-bnr").addClass("-active")}),null,n+2),Cookies.set("visited",1,{expires:1})}}(e)})),$(".js-info__open").on("click",(function(){PIXI.sound.stopAll(),PIXI.sound.muteAll(),$(".js-mutevoice").addClass("-mute"),t[r.blockID+o]&&(s.kill(),n.texture1=t[r.blockID+o].texture,n.texture2=null,n.dispFactor=0,l=1,TweenMax.to(n,d,{dispFactor:l,ease:Circ.easeInOut}),TweenMax.to(".l-canvas_overlay",1,{opacity:0}),$(".js-screenobj").removeClass("-active"),$("body,html").addClass("-inmodal"),setTimeout((function(){$(".info_modal").addClass("-active")}),1e3))})),$(".js-info__close").on("click",(function(){$(".info_modal").removeClass("-active"),$(".js-screenobj").addClass("-active"),$("body,html").removeClass("-inmodal"),$(".js-tabcont,.js-tabbtn").removeClass("-active"),$(".js-tabbtn").eq(0).addClass("-active"),$(".js-tabcont").eq(0).addClass("-active"),l=0,TweenMax.to(n,d,{dispFactor:l,ease:Circ.easeInOut,onComplete:function(){var e=o==c?1:o+1;n.texture2=t[r.blockID+e].texture,l=1,h()}})}))}},{key:"calcRatio",value:function(){var e=this.nrw?[750,1440]:[1920,970],t={x:1,y:1};return t.x=Math.min(window.innerWidth/window.innerHeight/(e[0]/e[1]),1),t.y=Math.min(window.innerHeight/window.innerWidth/(e[1]/e[0]),1),t}},{key:"setFullscreenCanvas",value:function(){var e=this;clearTimeout(this.resizeTimer),this.resizeTimer=setTimeout((function(){e.app.renderer.resize(window.innerWidth*window.devicePixelRatio,window.innerHeight*window.devicePixelRatio),e.app.view.style.width=window.innerWidth+"px",e.app.view.style.height=window.innerHeight+"px",e.graphics.clear(),e.graphics.beginFill(0),e.graphics.drawRect(0,0,window.innerWidth*window.devicePixelRatio,window.innerHeight*window.devicePixelRatio),e.graphics.endFill(),e.myFilter.uniforms.ratio=e.calcRatio()}),100)}}])&&n(t.prototype,i),a&&n(t,a),e}();function d(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.isiOS=navigator.userAgent.match(/iPhone|iPad|iPod/),this.init()}var t,i,a;return t=e,(i=[{key:"init",value:function(){this.tab(),this.removeContextmenu(),this.setEnvClass(),this.toggleMute(),this.infomodalVoice()}},{key:"tab",value:function(){$(".js-tabbtn").on("click",(function(){$(".js-tabbtn").removeClass("-active"),$(this).addClass("-active");var e=$(this).attr("data-tab");$(".js-tabcont").removeClass("-active"),$('.js-tabcont[data-tab="'+e+'"]').addClass("-active")}))}},{key:"toggleMute",value:function(){$(".js-mutevoice").on("click",(function(){$(this).hasClass("-mute")?($(this).removeClass("-mute"),window.isMute=!1,PIXI.sound.unmuteAll()):($(this).addClass("-mute"),window.isMute=!0,PIXI.sound.muteAll())}))}},{key:"infomodalVoice",value:function(){var e=!1,t=null,i=$(".js-infomodal_voice");i.on("click",(function(){if(!e){var i=$(this);i.addClass("-active"),e=!0,(t=new Audio("https://lance70176.github.io/5th-fate-go/reward/voice/intro_c63gvex9.mp3")).load(),4===t.readyState?t.play():t.addEventListener("canplaythrough",(function(e){t.play()})),t.addEventListener("ended",(function(t){e=!1,i.removeClass("-active")}))}})),$(".js-info__close").on("click",(function(){e&&(t.pause(),e=!1,i.removeClass("-active"))}))}},{key:"removeContextmenu",value:function(){document.body.oncontextmenu=function(){return!1}}},{key:"setEnvClass",value:function(){var e="";this.isiOS&&(e="-iOS"),$("body").addClass(e)}}])&&d(t.prototype,i),a&&d(t,a),e}();function v(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var _=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$dom={fullsize_screen:$(".fullsize_screen"),fullsize_screen__ph:$(".fullsize_screen__ph"),fullsize_screen__progress:$(".fullsize_screen__progress"),fullsize_screen__voice:$(".js-fullsize_screen_voice"),archive_voice:$(".js-archive_voice")},this.rewardCharaList=[],this.achievementList=[],this.prefAchievementList=[],this.init()}var t,i,a;return t=e,(i=[{key:"init",value:function(){this.createRewardCharaList()}},{key:"createRewardCharaList",value:function(){var e=this;$.ajax("https://lance70176.github.io/5th-fate-go/reward/rewardlist.html",{dataType:"json"}).done((function(t,i,a){t.forEach((function(t){e.rewardCharaList=e.rewardCharaList.concat(t.charaList),e.achievementList=e.achievementList.concat(t.achievement);for(var i=0;i<t.charaList.length;i++)e.prefAchievementList.push(t.achievement)})),e.eventBind(),e.blockAcc(),e.setInfo(0)}))}},{key:"setInfo",value:function(e,t){var i=window.archiveData[e],a=["pref","servant","cv","copy","spot","illust","media"];this.tgt=e;var n=this.rewardCharaList.filter((function(e){return e.pref===i.id}));$(".js-archive_ttl__ico").removeClass((function(e,t){return(t.match(/-\S+/g)||[]).join(" ")})),$(".js-archive_ttl__ico").addClass("-w -"+i.id),$(".js-archive_ttl").text(i.id),$(".js-archive_credit").each((function(e){var t="";i[a[e]]&&(t="copy"!==a[e]?i[a[e]].replace(/<.*>/,""):i[a[e]]),$(this).html(t)})),$(".js-archive_ph").attr("src","");var s=new Image;s.src="https://lance70176.github.io/5th-fate-go/assets/img/archive/ph/"+i.id+".jpg",s.addEventListener("load",(function(){$(".js-archive_ph").attr("src",s.src)})),$(".archive__list__item.-active").removeClass("-active"),$(".archive__list__item").eq(e).addClass("-active");var o=$(".js-archive__thumbbtn.-active").parents().attr("data-blockarea");this.setCurrentAcc(o,t),this.voice&&this.voice.pause(),this.prefAchievementList[e]?this.setAudio(n[0].id):this.hideAudio()}},{key:"changeArchiveList",value:function(e){var t=e.attr("data-cat");$(".archive__ttlarea__category__txt").removeClass("-active"),$(".archive__list__item__ph__item").removeClass("-active"),$(".archive__list__item__ttl").removeClass("-active"),$(".archive__list__item__ph__item.-"+t).addClass("-active"),$(".archive__list__item__ttl.-"+t).addClass("-active"),e.addClass("-active")}},{key:"setContainSize",value:function(){var e=this.$dom;e.fullsize_screen.hasClass("-active")&&window.innerWidth>768&&(window.innerWidth/window.innerHeight<=4.63768?e.fullsize_screen__ph.addClass("-fit_w"):e.fullsize_screen__ph.removeClass("-fit_w")),this.setFSVoicePos()}},{key:"loadFullImage",value:function(e){var t=this,i=this.$dom;i.fullsize_screen__progress.removeClass("-complete"),i.fullsize_screen__ph.removeClass("-active"),i.fullsize_screen__voice.css({display:"none"});var a=PIXI.Loader.shared;function n(){window.innerWidth<=768&&setTimeout((function(){var e=i.fullsize_screen__ph.width()/5;$(".fullsize_screen").scrollLeft(e)}),10)}a.resources[e]?(i.fullsize_screen__ph.attr("src",e),i.fullsize_screen__progress.addClass("-complete"),i.fullsize_screen__ph.addClass("-active"),n(),this.showFullScreenVoice(),this.setFSVoicePos()):(a.add(e,e),a.on("progress",(function(a){var s=a.progress/100;i.fullsize_screen__progress.css("transform","scaleX("+s+")"),100==a.progress&&(i.fullsize_screen__ph.attr("src",e),i.fullsize_screen__progress.addClass("-complete"),i.fullsize_screen__ph.addClass("-active"),n(),t.showFullScreenVoice(),t.setFSVoicePos())})))}},{key:"blockAcc",value:function(){$(".js-acc_open").on("click",(function(){if(!$(this).hasClass("-disable")){var e=$(this).next(".js-acc"),t=e.find(".js-acc__cont").outerHeight(!0);$(this).hasClass("-active")?($(this).removeClass("-active"),e.css("height",0)):($(this).addClass("-active"),e.css("height",t))}}))}},{key:"setCurrentAcc",value:function(e,t){t&&($(".js-acc").css("height",0),$(".js-acc_open").removeClass("-active"));var i=$('.js-acc_open[data-blockarea="'.concat(e,'"]'));i.addClass("-active");var a=i.next(".js-acc");a.addClass("-active");var n=a.find(".js-acc__cont").outerHeight(!0);a.css("height",n)}},{key:"eventBind",value:function(){var e=this,t=this,i="";$(".js-archive__thumbbtn").on("click",(function(){$(".archive__detail,.archive__detail__inner").removeClass("-active -open -fromL -fromR"),$(".archive__blockarea__scrollwrapper").addClass("-active"),$(".archive__ttlarea__back").addClass("-active"),$(".archive__ttlarea__category").removeClass("-active");for(var e=$(this).attr("data-id"),a=0,n=0;n<window.archiveData.length;n++)if(e===window.archiveData[n].id){a=n;break}setTimeout((function(){"prev"==i?$(".archive__detail,.archive__detail__inner").addClass("-active -fromL"):$(".archive__detail,.archive__detail__inner").addClass("-active -fromR"),t.setInfo(a)}),10)})),$(".archive__ttlarea__back").on("click",(function(){$(".archive__detail,.archive__blockarea__scrollwrapper").removeClass("-active"),$(".archive__ttlarea__category").addClass("-active"),$(this).removeClass("-active")})),$(".js-archive__open").on("click",(function(){if(PIXI.sound.muteAll(),$(".js-mutevoice").addClass("-mute"),$(".archive_modal").addClass("-active"),$("body,html").addClass("-inmodal"),$(".archive__detail").addClass("-open"),t.setAchievement(),$(".archive__list__item__ph__item.-active").each((function(e){var t=this;$(this).removeClass("-active"),setTimeout((function(){$(t).addClass("-active")}),40*e+200)})),$(this).attr("data-id")){var e=$(this).attr("data-id"),i=$('.js-archive__thumbbtn[data-id="'+e+'"]').index(".js-archive__thumbbtn");if($(this).hasClass("main__archivebtn")&&window.innerWidth<=768)return window.innerWidth>768||($(".archive__ttlarea__category").addClass("-active"),$(".archive__ttlarea__back").removeClass("-active"),$(".archive__blockarea__scrollwrapper").removeClass("-active"),$(".archive__detail").removeClass("-active")),void t.setInfo(i,"visibleOne");t.setInfo(i,"visibleOne"),window.innerWidth>768||($(".archive__ttlarea__category").removeClass("-active"),$(".archive__ttlarea__back").addClass("-active"),$(".archive__blockarea__scrollwrapper").addClass("-active"),$(".archive__detail").addClass("-active"))}})),$(".js-archive__close").on("click",(function(){$(".archive_modal").removeClass("-active"),$(".archive__detail").removeClass("-open"),$("body,html").removeClass("-inmodal"),setTimeout((function(){$(".archive__ttlarea__category").addClass("-active"),$(".archive__detail,.archive__list,.archive__ttlarea__back").removeClass("-active")}),400),$(".archive__accttl").removeClass("-achieve"),t.voice&&t.voice.pause()})),$(".archive__ttlarea__category__txt").on("click",(function(){t.changeArchiveList($(this))})),$(".js-fullsize_screen__open").on("click",(function(){$(".fullsize_screen__ph").removeClass("-height20 -vertical"),$(".fullsize_screen").addClass("-active");var e="";if($(this).hasClass("-station")){$(this).hasClass("-vertical")&&window.innerWidth<=768&&$(".fullsize_screen__ph").addClass("-vertical"),$(this).hasClass("-height20")&&window.innerWidth<=768&&$(".fullsize_screen__ph").addClass("-height20");var i=$(this).index(".js-fullsize_screen__open.-station");e="https://lance70176.github.io/5th-fate-go/assets/img/archive/ph/fullsize/station/".concat(window.stationData[i].id,"_").concat(window.stationData[i].hash,".jpg")}else{var a=$(".archive__list__item.-active").index(".archive__list__item");e="https://lance70176.github.io/5th-fate-go/assets/img/archive/ph/fullsize/".concat(window.archiveData[a].id,"_").concat(window.archiveData[a].hash,".jpg")}t.setContainSize(),t.loadFullImage(e)})),$(".js-fullsize_screen__close").on("click",(function(){$(".fullsize_screen").removeClass("-active"),$(".fullsize_screen__ph").attr("src","").removeClass("-active"),$(".fullsize_screen__ph").removeClass("-fit_w")})),$(window).on("resize",(function(){e.setContainSize()})),$(".js-archive_pagenate").on("click",(function(){var e=$("[data-listindex].-active").index("[data-listindex]"),t=$("[data-listindex]").length-1;"prev"===$(this).attr("data-direction")?(--e<0&&(e=t),i="prev"):(++e>t&&(e=0),i="next"),$("[data-listindex]").eq(e).trigger("click")}));var a=0,n=0,s=!1,o="",r=0;$(".archive_modal").on("scroll",(function(){s=!0,clearTimeout(o),o=setTimeout((function(){s=!1}),50)})),$(".archive__detail").on("touchstart",(function(e){a=e.touches[0].pageX})),$(".archive__detail").on("touchmove",(function(e){n=e.changedTouches[0].pageX,r=n-a,0===n||s||$(".archive__detail").css({transform:"translate(".concat(r,"px,0)")})})),$(".archive__detail").on("touchend",(function(e){if($(".archive__detail").css({transform:"translate(0,0)"}),!(0===n||Math.abs(r)<50)){var t=$("[data-listindex].-active").index("[data-listindex]"),s=$("[data-listindex]").length-1;r>0?(--t<0&&(t=s),i="prev"):(++t>s&&(t=0),i="next"),$("[data-listindex]").eq(t).trigger("click"),a=n=r=0}}))}},{key:"setAchievement",value:function(){var e=this;$(".archive__accttl").each((function(t,i){var a=$(i),n=a.find(".archive__voiceopen"),s=.05*t+.5;e.achievementList[t]&&(a.addClass("-achieve"),gsap.set(n,{opacity:0}),gsap.to(n,{duration:.2,delay:s,scale:.8,rotate:-1,opacity:1}),gsap.to(n,{duration:.35,delay:s+.2,scale:1.3,rotate:2}),gsap.to(n,{duration:.4,delay:s+.55,scale:1,rotate:0,opacity:1,ease:"back.out(1.4)"}))}))}},{key:"randomVoiceOpenAnime",value:function(e){var t=this,i=1e4*Math.random()+2e3;setTimeout((function(){gsap.to(e,{duration:.2,scale:.35,rotation:-10,opacity:0,ease:"power2.out"}),gsap.to(e,{duration:.4,delay:.2,scale:1,rotate:0,opacity:1,ease:"back.out(1.4)"}),$(".archive_modal").hasClass("-active")&&t.randomVoiceOpenAnime(e)}),i)}},{key:"setAudio",value:function(e){var t=this;this.isPlaying=!1,this.audioFile="https://lance70176.github.io/5th-fate-go/reward/voice/".concat(e,".mp3"),this.$dom.archive_voice.on("click",(function(){t.playAudio()})),this.$dom.fullsize_screen__voice.on("click",(function(){t.playAudio()})),this.$dom.archive_voice.css({display:"block"}),this.$dom.archive_voice.removeClass("-playing"),this.$dom.fullsize_screen__voice.removeClass("-playing")}},{key:"hideAudio",value:function(){this.$dom.archive_voice.css({display:"none"}),this.$dom.fullsize_screen__voice.css({display:"none"})}},{key:"playAudio",value:function(){var e=this;this.isPlaying||(this.voice=new Audio(this.audioFile),this.voice.load(),4===this.voice.readyState?this.voice.play():this.voice.addEventListener("canplaythrough",(function(t){e.voice.play()})),this.voice.addEventListener("ended",(function(t){e.$dom.archive_voice.removeClass("-playing"),e.$dom.fullsize_screen__voice.removeClass("-playing"),e.isPlaying=!1,e.voice=null})),this.$dom.archive_voice.addClass("-playing"),this.$dom.fullsize_screen__voice.addClass("-playing"),this.isPlaying=!0)}},{key:"setFSVoicePos",value:function(){if(this.prefAchievementList[this.tgt]){var e,t,i=this.$dom.fullsize_screen__ph.width()/2,a=this.$dom.fullsize_screen__ph.height()/2;window.innerWidth>768?(e=i+85,t=a):(e=window.innerWidth/2-15,t=a+60),this.$dom.fullsize_screen__voice.css({transform:"translate(".concat(e,"px, ").concat(t,"px)")})}}},{key:"showFullScreenVoice",value:function(){this.prefAchievementList[this.tgt]&&this.$dom.fullsize_screen__voice.css({display:"block"})}}])&&v(t.prototype,i),a&&v(t,a),e}();function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var m=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.isMobile=navigator.userAgent.match(/iPhone|iPad|iPod|Android/),this.init()}var t,i,a;return t=e,(i=[{key:"init",value:function(){this.eventBind()}},{key:"eventBind",value:function(){var e=this;$("[data-ga]").each((function(t){var i=$(this).data("ga");$(this).on("click",(function(){e.sendGA(i)}))}))}},{key:"sendGA",value:function(e){if(e&&"object"===h(e)){var t=this.isMobile?"_sp":"",i={event_category:e[0]+t||"",event_label:e[1]+t||""};window.gtag("event","click",i)}}}])&&f(t.prototype,i),a&&f(t,a),e}();new l,new u,new _,new m}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,